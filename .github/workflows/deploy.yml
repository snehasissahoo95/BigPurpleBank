name: Build and Deploy BigPurpleBank API

on:
  push:
    branches:
      - master

env:
  AZURE_WEBAPP_NAME: BigPurpleBankApp
  DOTNET_VERSION: '8.0.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    # Set Service Principal Credentials as environment variables
    - name: Set Service Principal Credentials
      run: |
        echo "ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}" >> $GITHUB_ENV
        echo "ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}" >> $GITHUB_ENV
        echo "ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}" >> $GITHUB_ENV
        echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
        echo "SQL_PASSWORD=${{ secrets.SQL_PASSWORD }}" >> $GITHUB_ENV

    # Set up Terraform
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.6

    # Login to Azure via OIDC (for resource provisioning)
    - name: Login to Azure via OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # Terraform Init
    - name: Terraform Init
      run: terraform init
      working-directory: ./Infrastructure
      env:
        ARM_USE_OIDC: true
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}

    # Terraform Plan - Taint Key Vault Secret for recreation
    - name: Terraform Plan (Taint Key Vault Secret)
      run: |
        terraform taint azurerm_key_vault_secret.sql_connection_string
        terraform plan var="client_id=${{ secrets.ARM_CLIENT_ID }}" -var="tenant_id=${{ secrets.ARM_TENANT_ID }}" -var="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}"
      working-directory: ./Infrastructure
      env:
        SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}

    # Terraform Apply
    - name: Terraform Apply
      run: |
        terraform apply -auto-approve \
          -var="client_id=${{ secrets.ARM_CLIENT_ID }}" \
          -var="tenant_id=${{ secrets.ARM_TENANT_ID }}" \
          -var="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
          -var="sql_password=${{ secrets.SQL_PASSWORD }}"
      working-directory: ./Infrastructure
      env:
        SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}

    # Setup .NET
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    # Publish .NET App
    - name: Publish .NET App
      run: dotnet publish ./BigPurpleBank.csproj -c Release -o publish

    # Deploy to Azure Web App
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: publish
